/* Experience Title
––––––––––––––––––––––––––––––––––––––––––––––––––*/
.titleContainer {
    display: flex;
    flex-direction: column;
    margin: 0 0 -3% 3%;
}

@media only screen and (min-width: 800px) {
    .titleContainer {
        margin: 0 0 -3% 5%;
    }
}

.titleLine {
    border: none;
    height: 2px;
    background-color: var(--night-special-color);
    margin-top: -5px;

    width: 0%;
    transition: width 1s ease;
}

@media only screen and (min-width: 800px) {
    .titleLine {
        height: 3px;
        margin-top: -10px;
    }
}

.animateTitleLine {
    width: 40%;
}

@media only screen and (min-width: 500px) {
    .animateTitleLine {
        width: 30%;
    }
}

@media only screen and (min-width: 800px) {
    .animateTitleLine {
        width: 20%;
    }
}


/* SVGs
––––––––––––––––––––––––––––––––––––––––––––––––––*/
.art {
    display: flex;
    flex-direction: column;
}

.mms {
    align-self: center;
    width: 75%;
}


/* Arrow Buttons
––––––––––––––––––––––––––––––––––––––––––––––––––*/
.arrowBtn {
    display: none;
}

@media only screen and (min-width: 1000px) {
    .arrowBtn {
        display: block;
    }
}

.leftArrow {
    height: 11.3rem;
}

.leftArrow:hover path
.leftArrow:focus path {
    animation: alt-stroke-width 1.7s ease-in infinite;
}

@keyframes alt-stroke-width {
    0%, 50%, 100% {
        stroke-width: 2;
        color: var(--day-bg-color);
    }

    25% {
        stroke-width: 3;
        stroke: var(--night-special-color);
    }

    75% {
        stroke-width: 1;
    }
}

.rightArrow {
    height: 11.3rem;
    transform: rotate(180deg);
}

.rightArrow:hover path,
.rightArrow:focus path {
    animation: alt-stroke-width 1.7s ease-in infinite;
}


/* Dots
––––––––––––––––––––––––––––––––––––––––––––––––––*/
.dotContainer {
    display: none;
}

.dotContainer2 {
    display: flex;
    justify-content: center;
    gap: 5%;
    margin: 0 0 15% 0;
    transition: height 0.8s ease;
}

@media only screen and (min-width: 1000px) {
    .dotContainer {
        display: flex;
        justify-content: center;
        gap: 2%;
        margin: 2% 0 0 0;
    }
    
    .dotContainer2 {
        display: none;
    }
}

.dot {
    display: inline-block;
    height: 1rem;
    width: 1rem;
    border: 2px solid var(--day-bg-color);
    border-radius: 50%;

    background-color: transparent;
    transition: background-color 0.3s;
}

.selectedDot {
    background-color: var(--day-bg-color);
}

.circleArrow {
    display: block;
}

@media only screen and (min-width: 1000px) {
    .circleArrow {
        display: none;
    }
}

.leftCircleArrow {
    height: 14px;
}

.leftCircleArrow:hover path
.leftCircleArrow:focus path {
    animation: alt-stroke-width 1.7s ease-in infinite;
}

.rightCircleArrow {
    height: 14px;
    transform: rotate(180deg);
}

.rightCircleArrow:hover path
.rightCircleArrow:focus path {
    animation: alt-stroke-width 1.7s ease-in infinite;
}


/* General Descriptions
––––––––––––––––––––––––––––––––––––––––––––––––––*/
.expContainer {
    margin: 2% 6% 25% 6%;
}

@media only screen and (min-width: 1000px) {
    .expContainer {
        margin: 2% 10% 5% 10%;
    }
}

.mainDescs {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
}

.allDesc {
    position: relative;
    top: 0%;
    left: 0%;
    display: flex;
    flex-direction: column;
}

.title {
    text-align: center;
    margin-bottom: 3%;
}

@media only screen and (min-width: 1000px) {
    .title {
        width: 30%;
        align-self: start;
        margin-bottom: 0%;
    }
}

.title > h3 {
    color: var(--day-bg-color);
    font-weight: 600;
}

.title > h4 {
    color: var(--night-special-color);
    font-size: clamp(1.3rem, 3vw, 2.2rem);
    font-style: italic;
    font-weight: 500;
}


/* Specific Descriptions
––––––––––––––––––––––––––––––––––––––––––––––––––*/
.baseDesc {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    opacity: 0;
    visibility: hidden;
    transition: all 0.6s ease-in-out;
}

@media only screen and (min-width: 1000px) {
    .baseDesc {
        flex-direction: row;
        margin: 0 5% 0 5%;
    }
}

.mart,
.pi {
    position: absolute;
    top: 0%;
    left: 0%;
    column-gap: 4%;
}

/* dt description is the largest so it is set to relative */
.dt {
    position: relative;
    column-gap: 4%;
}

@media only screen and (min-width: 1000px) {
    .desc {
        flex: 1;
    }
}

.showDesc {
    animation: slide-in-desc 0.8s ease 0.75s forwards;
    visibility: visible;
}

.hideDesc {
    animation: slide-out-desc 0.8s ease forwards;
    visibility: hidden;
}

@keyframes slide-in-desc {
    from {
        transform: translateX(-5%);
        opacity: 0;
    }

    to {
        transform: translateX(0%);
        opacity: 1;
    }
}

@media only screen and (min-width: 1000px) {
    @keyframes slide-in-desc {
        from {
            transform: translateX(-20%);
            opacity: 0;
        }

        to {
            transform: translateX(0%);
            opacity: 1;
        }
    }
}

@keyframes slide-out-desc {
    from {
        transform: translateX(0%);
        opacity: 1;
    }

    to {
        transform: translateX(5%);
        opacity: 0;
    }
}

@media only screen and (min-width: 1000px) {
    @keyframes slide-out-desc {
        from {
            transform: translateX(0%);
            opacity: 1;
        }

        to {
            transform: translateX(20%);
            opacity: 0;
        }
    }
}


/* Expand Button
––––––––––––––––––––––––––––––––––––––––––––––––––*/
.expandContainer {
    position: relative;
    display: flex;
    justify-content: flex-start;
    margin-top: 0.5%;
    color: var(--night-special-color);
}

@media only screen and (min-width: 1000px) {
    .expandContainer {
        justify-content: flex-end;
    }
}

.hideExpander {
    opacity: 0;
}

.expander {
    position: relative;
    display: flex;
    align-items: center;
    gap: 5px;
}

.expander > p {
    font-weight: 500;
    overflow: hidden;
}

.expandTriangle {
    width: 15px;
    height: auto;
    transform: rotate(180deg);
    transition: all 0.6s;
}

@media only screen and (min-width: 1000px) {
    .expandTriangle {
        width: 20px;
        height: auto;
    }
}


/* Expand Animations
––––––––––––––––––––––––––––––––––––––––––––––––––*/
.expander > p::after {
    display: block;
    content: '';
    position: relative;
    bottom: 0;
    left: 0;

    height: 1px;
    background: var(--day-bg-color);
    transform: translate3d(-100%, 0, 0);
    transition: transform 0.6s;
}

.expander:hover > p::after,
.expander:focus > p::after{
    transform: translate3d(0, 0, 0);
}

.expander:hover .expandTriangle,
.expander:focus .expandTriangle {
    fill: transparent;
    transform: rotate(360deg);
}


/* Add-on Descriptions
––––––––––––––––––––––––––––––––––––––––––––––––––*/
.addOns {
    position: relative;
    display: flex;
    margin-top: 5%;   
}

@media only screen and (min-width: 1000px) {
    .addOns {
        height: 200px;
        margin: 2% 11% 0 15%;
    }
}

.addOnContainer {
    position: absolute;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-content: center;

    left: 0%;
    top: 0%;
    max-height: 0px;
    overflow: hidden;
    transition: max-height 0.8s ease;
}

.selectedAddOn {
    position: relative;
}

@media only screen and (min-width: 1000px) {
    .selectedAddOn {
        position: absolute;
    }
}

.showAddOnContainer {
    max-height: 450px;
}

@media only screen and (min-width: 500px) {
    .showAddOnContainer {
        max-height: 300px;
    }
}

@media only screen and (min-width: 1000px) {
    .showAddOnContainer {
        max-height: 400px;
    }
}


/* Collapse Button
––––––––––––––––––––––––––––––––––––––––––––––––––*/
.collapseContainer {
    align-self: flex-start;
    color: var(--night-special-color);
    margin-top: 0.5%;
}

@media only screen and (min-width: 1000px) {
    .collapseContainer {
        align-self: flex-end;
    }
}

.collapser {
    display: flex;
    align-items: center;
    gap: 5px;
}

.collapser > p {
    font-weight: 500;
    overflow: hidden;
}

.collapseTriangle {
    width: 15px;
    height: auto;
    fill: transparent;
    transition: all 0.6s;
}

@media only screen and (min-width: 1000px) {
    .collapseTriangle {
        width: 20px;
        height: auto;
    }
}


/* Collapse Animations
––––––––––––––––––––––––––––––––––––––––––––––––––*/
.collapser > p::after {
    display: block;
    content: '';
    position: relative;
    bottom: 0;
    left: 0;

    height: 1px;
    background: var(--day-bg-color);
    transform: translate3d(100%, 0, 0);
    transition: transform 0.6s;
}

.collapser:hover > p::after,
.collapser:focus > p::after{
    transform: translate3d(0, 0, 0);
}

.collapser:hover .collapseTriangle,
.collapser:focus .collapseTriangle {
    fill: var(--day-bg-color);
    transform: rotate(180deg);
}


/* Horizontal Breaks
––––––––––––––––––––––––––––––––––––––––––––––––––*/
.horizontalBreak {
    border: 0;
    width: 80%;
    height: 1px;
    background-color: var(--day-bg-color);
    margin: 3% 0 0 10%;
}

@media only screen and (min-width: 1000px) {
    .horizontalBreak {
        height: 2px;
    }
}